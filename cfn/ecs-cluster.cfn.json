{ "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "ECS Cluster",
  "Mappings" : {
    "ARNNamespace": {
      "us-east-1":      { "Partition": "aws" },
      "us-east-2":      { "Partition": "aws" },
      "us-west-2":      { "Partition": "aws" },
      "us-west-1":      { "Partition": "aws" },
      "eu-west-1":      { "Partition": "aws" },
      "eu-central-1":   { "Partition": "aws" },
      "ap-southeast-1": { "Partition": "aws" },
      "ap-northeast-1": { "Partition": "aws" },
      "ap-southeast-2": { "Partition": "aws" },
      "sa-east-1":      { "Partition": "aws" },
      "us-gov-west-1":  { "Partition": "aws-us-gov" }
    }
  },
  "Parameters" : {
    "Bucket": {
      "Type": "String"
    },

    "storeFrontWebDocker" : {
      "Type": "String"
    },

    "storeFrontUserDocker" : {
      "Type" : "String"
    },

    "VolumeSize" : {
      "Type" : "Number"
    },

    "dbuser" : {
      "Type": "String"
    },

    "dbpassword" : {
      "Type": "String"
    },

    "dbname" : {
      "Type": "String"
    },

    "DomainPassword" : {
      "Type": "String"
    },

    "EnvironmentType" : {
      "Type" : "String"
    },

    "EcsAmiId" : {
      "Type" : "String"
    },

    "EcsInstanceType" : {
      "Type" : "String"
    },

    "KeyName" : {
      "Type" : "String"
    },

    "VpcId" : {
      "Type" : "String"
    },

    "SubnetIds" : {
      "Type" : "CommaDelimitedList"
    },

    "EcsClusterName" : {
      "Type" : "String"
    },
    "EcsPort" : {
      "Type" : "String"
    },
    "SourceCidr" : {
      "Type" : "String"
    },
    "ElbSecurityGroup" : {
      "Type" : "String"
    },
    "BrokerElbSecurityGroup" : {
      "Type" : "String"
    },
    "StorefrontELB" : {
      "Type" : "String"
    },
    "StorefrontURL" : {
      "Type" : "String"
    },
    "BrokerElbURL" : {
      "Type" : "String"
    },
    "brokerELB" : {
      "Type" : "String"
    },
    "LambdaUserContinerArn" : {
      "Type" : "String"
    },
    "ScaleTEService" : {
      "Type" : "String"
    }
  },

  "Resources" : {

    "EcsSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "ECS Allowed Ports",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" :
        [
          { "IpProtocol" : "tcp", "FromPort" : { "Ref" : "EcsPort" }, "ToPort" : { "Ref" : "EcsPort" }, "CidrIp" : { "Ref" : "SourceCidr" } },
          { "IpProtocol" : "tcp", "FromPort" : "1", "ToPort" : "65535", "SourceSecurityGroupId" :  { "Ref" : "ElbSecurityGroup" } },
          { "IpProtocol" : "tcp", "FromPort" : "48004", "ToPort" : "48004", "SourceSecurityGroupId" :  { "Ref" : "BrokerElbSecurityGroup" } },
          { "IpProtocol" : "tcp", "FromPort" : "8888", "ToPort" : "8888", "SourceSecurityGroupId" :  { "Ref" : "BrokerElbSecurityGroup" } },
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp": "0.0.0.0/0" }
        ]
      }
    },

    "ECSInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement":
          [
            {
              "Effect": "Allow",
              "Principal" : { "Service": [ "ec2.amazonaws.com", "ecs-tasks.amazonaws.com" ] },
              "Action": [ "sts:AssumeRole" ]
            }
          ]
        },
        "Path": "/",
        "Policies":
        [
          {
            "PolicyName": "deployRead",
            "PolicyDocument": {
              "Statement":
              [
                {
                  "Action": [ "s3:Get*", "s3:List*" ],
                  "Effect": "Allow",
                  "Resource":
                  [
                    { "Fn::Join": [ "", [ "arn:", { "Fn::FindInMap" : [ "ARNNamespace", { "Ref" : "AWS::Region" },  "Partition" ] }, ":s3:::", {"Ref" : "Bucket"}, "/"]]},
                    { "Fn::Join": [ "", [ "arn:", { "Fn::FindInMap" : [ "ARNNamespace", { "Ref" : "AWS::Region" },  "Partition" ] }, ":s3:::", {"Ref" : "Bucket"}, "/*"]]}
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "deployBucketRead",
            "PolicyDocument": {
              "Statement":
              [
                {
                  "Action": [  "s3:List*" ],
                  "Effect": "Allow",
                  "Resource":
                  [
                    { "Fn::Join": [ "", [ "arn:", { "Fn::FindInMap" : [ "ARNNamespace", { "Ref" : "AWS::Region" },  "Partition" ] }, ":s3:::", {"Ref" : "Bucket"}]]}
                  ]
                }
              ]
            }
          },

          {
            "PolicyName": "cloudwatchLogs",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:GetLogEvents",
                    "logs:PutLogEvents",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams"
                  ],
                  "Resource": [
                    { "Fn::Join": [ "", [ "arn:", { "Fn::FindInMap" : [ "ARNNamespace", { "Ref" : "AWS::Region" },  "Partition" ] }, ":logs:*:*:*" ]]}
                  ]
                }
              ]
            }
          },
          {
            "PolicyName" : "ECSCreateCluster",
            "PolicyDocument" : {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "createandattachvolume",
            "PolicyDocument":  {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "Stmt1441831086000",
                  "Effect": "Allow",
                  "Action": [
                    "ec2:AttachVolume",
                    "ec2:CreateVolume",
                    "ec2:DescribeVolumes",
                    "ec2:CreateSnapshot",
                    "ec2:DeleteSnapshot",
                    "ec2:DescribeSnapshots",
                    "ec2:CreateTags",
                    "ec2:ModifyInstanceAttribute"
                  ],
                  "Resource": [ "*" ]
                }
              ]
            }
          },
          {
            "PolicyName": "manageElb",
            "PolicyDocument":  {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "Stmt1441831086000",
                  "Effect": "Allow",
                  "Action": [
                    "elasticloadbalancing:*"
                  ],
                  "Resource": [ "*" ]
                }
              ]
            }
          }
        ]
      }
    },

    "ECSInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "ECSInstanceRole" } ]
      }
    },



    "EcsInstanceLc" : {
      "DependsOn" : "EcsCluster",
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId": {
          "Ref": "EcsAmiId"
        },
        "InstanceType": {
          "Ref": "EcsInstanceType"
        },
        "AssociatePublicIpAddress": true,
        "IamInstanceProfile": {"Ref": "ECSInstanceProfile" },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "EcsSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "echo ECS_CLUSTER=", {"Ref": "EcsClusterName"}, " >> /etc/ecs/ecs.config\n"
              ]
            ]
          }
        }
      }
    },

    "EcsInstanceAsg" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : [ { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] } ],
        "VPCZoneIdentifier" : { "Ref" : "SubnetIds" },
        "LaunchConfigurationName" : { "Ref" : "EcsInstanceLc" },
        "MinSize" : "1",
        "MaxSize" : "2",
        "DesiredCapacity" : "1",
        "HealthCheckGracePeriod" : "600",
        "HealthCheckType" : "ELB",
        "LoadBalancerNames" : [ { "Fn::Join" : ["", [{ "Ref" : "brokerELB" }, { "Ref" : "StorefrontELB" }]]}],
        "Tags" : [ { "Key" : "Name", "Value" : { "Fn::Join" : ["", [ "ECS Instance - ", { "Ref" : "AWS::StackName" } ] ] }, "PropagateAtLaunch" : "true" } ]
      }
    },

    "EcsCluster" : {
      "Type" : "AWS::ECS::Cluster",
      "Properties" : {
        "ClusterName" : { "Ref" : "EcsClusterName" }
      }
    },

    "StorefrontUserTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family" : "storefrontuser-family",
        "ContainerDefinitions": [
          {
            "Name": "storefrontuser-definition",
            "Image": { "Ref" : "storeFrontUserDocker" },
            "Cpu": "2",
            "MemoryReservation": "4096",
            "ReadonlyRootFilesystem": "false",
            "Environment": [
              {
                "Name": "ENV_TYPE",
                "Value": { "Ref": "EnvironmentType" }
              },
              {
                "Name": "ARG_dburl",
                "Value": { "Fn::Join" : [ "", [ { "Ref" : "dbname"}, "@", { "Ref" : "BrokerElbURL" }, ":48004" ]]}
              },
              {
                "Name": "ARG_apphost",
                "Value": { "Fn::Join" : ["", ["http://", { "Ref" : "StorefrontURL" }, ":80/StorefrontWeb" ]]}
              },
              {
                "Name": "ARG_dbname",
                "Value": { "Ref": "dbname" }
              },
              {
                "Name": "ARG_dbuser",
                "Value": { "Ref": "dbuser" }
              },
              {
                "Name": "ARG_dbpassword",
                "Value": { "Ref": "dbpassword" }
              },
              {
                "Name" : "ARG_workloadmulti_browseusers",
                "Value" : "2000"
              },
              {
                "Name" : "ARG_workloadmulti_shopusers",
                "Value" : "50"
              },
              {
                "Name" : "ARG_workloadadmin_run_reportusers",
                "Value" : "0"
              },
              {
                "Name" : "ARG_workloadmulti_browse_and_reviewusers",
                "Value" : "50"
              }
            ]
          }
        ]
      }
    },

    "StorefrontUserService": {
      "DependsOn" : ["StorefrontUserTaskDefinition"],
      "Type" : "AWS::ECS::Service",
      "Properties" : {
        "Cluster" : { "Ref" : "EcsClusterName" },
        "DesiredCount" : "0",
        "ServiceName" : "storefrontuser-service",
        "PlacementStrategies" : [{ "Type": "random"}],
        "TaskDefinition" : { "Ref" : "StorefrontUserTaskDefinition"},
        "DeploymentConfiguration" :
        {
          "MaximumPercent" : 200,
          "MinimumHealthyPercent" : 100
        }
      }
    },

    "StorefrontTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family" : "storefront-family",
        "ContainerDefinitions": [
          {
            "Name": "storefront-definition",
            "Image": { "Ref" : "storeFrontWebDocker" },
            "Cpu": "2",
            "MemoryReservation": "4096",
            "ReadonlyRootFilesystem": "false",
            "PortMappings": [
              {
                "ContainerPort": "8080",
                "HostPort": "8080"
              }
            ],
            "Environment": [
              {
                "Name": "ARG_awsRegion",
                "Value": { "Ref": "AWS::Region" }
              },
              {
                "Name": "ENV_TYPE",
                "Value": { "Ref": "EnvironmentType" }
              },
              {
                "Name": "ARG_JDBC_URL",
                "Value": { "Ref" : "BrokerElbURL" }
              },
              {
                "Name": "ARG_userLoadLambdaArn",
                "Value": { "Ref" : "LambdaUserContinerArn"}
              },
              {
                "Name" : "ARG_teScalingLambdaArn",
                "Value" : { "Ref" : "ScaleTEService" }
              },
              {
                "Name": "ARG_ecsClusterName",
                "Value": { "Ref" : "EcsClusterName" }
              },
              {
                "Name": "ARG_storefronturl",
                "Value": { "Fn::Join": [ "", [ "http://", { "Ref" : "StorefrontURL" }, ":80/" ]]}
              },
              {
                "Name": "ARG_dbname",
                "Value": { "Ref": "dbname" }
              },
              {
                "Name": "ARG_dbuser",
                "Value": { "Ref": "dbuser" }
              },
              {
                "Name": "ARG_dbpassword",
                "Value": { "Ref": "dbpassword" }
              }
            ]
          }
        ]
      }
    },

    "StorefrontService": {
      "DependsOn" : ["StorefrontTaskDefinition"],
      "Type" : "AWS::ECS::Service",
      "Properties" : {
        "Cluster" : { "Ref" : "EcsClusterName" },
        "DesiredCount" : "1",
        "ServiceName" : "storefront-service",
        "PlacementStrategies" : [{ "Type": "random"}],
        "TaskDefinition" : { "Ref" : "StorefrontTaskDefinition" }
      }
    }

  },
  "Outputs" : {
    "ECSInstanceRole" : {
      "Description" : "Instance role logical name",
      "Value" : { "Ref" : "ECSInstanceRole" }
    }

  }
}
