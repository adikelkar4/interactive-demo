<!-- Copyright (c) 2013-2015 NuoDB, Inc. -->
<!DOCTYPE hibernate-configuration SYSTEM "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>
        <!-- Tell Hibernate to speak NuoDB -->
        <property name="dialect">com.nuodb.hibernate.NuoDBDialect</property>

        <!-- Configure the NuoDB DataSource connection pool -->
        <property name="hibernate.connection.isolation">2</property> <!-- 2 == TRANSACTION_READ_COMMITTED; see http://doc.nuodb.com/display/doc/Relationship+to+java.sql+Levels -->
        <property name="hibernate.connection.provider_class">com.nuodb.storefront.dal.DataSourceProvider</property>
        <property name="hibernate.connection.url">jdbc:com.nuodb://localhost:48004/Storefront</property>
        <property name="hibernate.connection.username">StorefrontUser</property>
        <property name="hibernate.connection.password">StorefrontUser</property>
        <property name="hibernate.connection.initialSize">100</property>
        <property name="hibernate.connection.loginTimeout">10</property>
        <property name="hibernate.connection.maxActive">0</property>
        <property name="hibernate.connection.maxWait">30100</property>
        <property name="hibernate.connection.maxAge">30000</property>
        <property name="hibernate.connection.defaultSchema">Storefront</property>
        <property name="hibernate.connection.defaultReadOnly">false</property>
        <property name="hibernate.connection.defaultAutoCommit">true</property>
        <property name="hibernate.connection.testOnReturn">false</property>
        <property name="hibernate.connection.testOnBorrow">false</property>
        <property name="hibernate.connection.testWhileIdle">false</property>
        <property name="hibernate.connection.validationQuery">SELECT 1 FROM DUAL</property>
        <property name="hibernate.connection.validationInterval">7500</property>
        <property name="hibernate.connection.timeBetweenEvictionRunsMillis">5000</property>
        <property name="hibernate.connection.url-delimiter">|</property>

        <!-- Disable the second-level cache (best practice with NuoDB) -->
        <!-- See http://www.nuodb.com/techblog/tag/memcached/ for more info -->
        <property name="cache.provider_class">org.hibernate.cache.NoCacheProvider</property>
        <property name="cache.use_query_cache">false</property>
        <property name="cache.use_minimal_puts">false</property>

        <!-- In eager fetching, only join three tables deep if joins are 
            used -->
        <property name="max_fetch_depth">3</property>

        <!-- Print SQL to stdout, format it nicely -->
        <property name="show_sql">false</property>
        <property name="format_sql">true</property>
        <property name="use_sql_comments">true</property>

        <!-- Drop and then re-create schema on SessionFactory build, for 
            testing -->
        <property name="hbm2ddl.auto">update</property>

        <!-- Use thread-bound persistence context propagation, scoped to 
            the transaction -->
        <property name="current_session_context_class">thread</property>

        <!-- Add mappings (using annotations) -->
        <mapping class="com.nuodb.storefront.model.entity.AppInstance" />
        <mapping class="com.nuodb.storefront.model.entity.CartSelection" />
        <mapping class="com.nuodb.storefront.model.entity.Customer" />
        <mapping class="com.nuodb.storefront.model.entity.Product" />
        <mapping class="com.nuodb.storefront.model.entity.ProductReview" />
        <mapping class="com.nuodb.storefront.model.entity.Purchase" />
        <mapping class="com.nuodb.storefront.model.entity.PurchaseSelection" />

    </session-factory>

</hibernate-configuration>
